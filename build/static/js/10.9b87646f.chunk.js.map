{"version":3,"sources":["components/Auth/ResetPassword.js","hooks/use-input.js","components/Auth/AuthForm.module.css"],"names":["ResetPassword","feedback","useState","isLoading","setIsLoading","useInput","email","match","enteredEmail","value","emailIsValid","isValid","emailChangeHandler","valueChangeHandler","resetPassword","reset","authError","setAuthError","className","classes","useEffect","container","bg","expand","to","Brand","element","onSubmit","event","preventDefault","fetch","method","body","JSON","stringify","requestType","headers","then","res","ok","json","data","console","log","errorMessage","error","message","Error","catch","err","control","htmlFor","onChange","type","id","required","actions","disabled","flex","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","target","inputBlurHandler","module","exports"],"mappings":"yOA8HeA,UAtHO,WACpB,IA+DIC,EA/DJ,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAUA,EAKIC,aAdoB,SAACC,GAEvB,QAAIA,EAAMC,MADS,kDASZC,EADT,EACEC,MACSC,EAFX,EAEEC,QACoBC,EAHtB,EAGEC,mBACOC,EAJT,EAIEC,MAIF,EAAkCb,mBAAS,MAA3C,mBAAOc,EAAP,KAAkBC,EAAlB,KAwDA,MAVkB,oBAAdD,EACFf,EAAW,mBAAGiB,UAAWC,IAAQ,cAAtB,qCACY,KAAdH,IACTf,EAAW,mBAAGiB,UAAWC,IAAQ,cAAtB,SAAsCH,KAInDI,qBAAU,WACRH,EAAa,QACZ,CAACT,IAEF,sBAAKU,UAAWC,IAAQE,UAAxB,UACE,cAAC,IAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAOC,MAAR,CAAcP,UAAU,OAAxB,6BAIN,sBAAKA,UAAWC,IAAQO,QAAxB,UACE,kDACA,mBAAGR,UAAU,OAAb,wFAIA,uBAAMS,SApEiB,SAACC,GAC5BA,EAAMC,iBAENzB,GAAa,GACb0B,MACE,6GACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,YAAa,iBACb7B,MAAOE,IAET4B,QAAS,CACP,eAAgB,sBAInBC,MAAK,SAACC,GAEL,OADAlC,GAAa,GACTkC,EAAIC,GAECD,EAAIE,OAEJF,EAAIE,OAAOH,MAAK,SAACI,GACtBC,QAAQC,IAAIF,GACZ,IAAIG,EAAe,wBAInB,MAHIH,GAAQA,EAAKI,OAASJ,EAAKI,MAAMC,UACnCF,EAAeH,EAAKI,MAAMC,SAEtB,IAAIC,MAAMH,SAIrBP,MAAK,SAACI,GACL3B,OAEDkC,OAAM,SAACC,GAENhC,EAAagC,EAAIH,aA8BqB5B,UAAWC,IAAQ,cAAzD,UACE,sBAAKD,UAAWC,IAAQ+B,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBACE1C,MAAOD,EACP4C,SAAUxC,EACVyC,KAAK,QACLC,GAAG,QACHC,UAAQ,OAGZ,sBAAKrC,UAAWC,IAAQqC,QAAxB,UACGrD,EACC,cAAC,IAAD,IAEA,wBAAQsD,UAAW/C,EAAnB,4BAEDT,QAGL,eAAC,IAAD,CAAMiB,UAAWC,IAAQuC,KAAMlC,GAAG,SAAlC,UACE,cAAC,IAAD,IADF,4B,kDCrFOnB,IA9BE,SAACsD,GAEhB,MAAwCzD,mBAAS,IAAjD,mBAAO0D,EAAP,KAAqBC,EAArB,KACA,EAAkC3D,oBAAS,GAA3C,mBAAO4D,EAAP,KAAkBC,EAAlB,KAEMC,EAAeL,EAAcC,GAenC,MAAO,CACLnD,MAAOmD,EACPjD,QAASqD,EACTC,UAjBgBD,GAAgBF,EAkBhCjD,mBAhByB,SAACe,GAC1BiC,EAAgBjC,EAAMsC,OAAOzD,QAgB7B0D,iBAbuB,SAACvC,GACxBmC,GAAa,IAabhD,MAXY,WACZ8C,EAAgB,IAChBE,GAAa,O,mBCnBjBK,EAAOC,QAAU,CAAC,UAAY,4BAA4B,QAAU,0BAA0B,aAAa,6BAA6B,QAAU,0BAA0B,QAAU,0BAA0B,QAAU,0BAA0B,OAAS,yBAAyB,OAAS,yBAAyB,KAAO,uBAAuB,aAAa","file":"static/js/10.9b87646f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport Loader from \"../UI/Loader\";\nimport useInput from \"../../hooks/use-input\";\nimport { Link } from \"react-router-dom\";\nimport { IoMdArrowBack } from \"react-icons/io\";\nimport { Navbar, Container } from \"react-bootstrap\";\n\nconst ResetPassword = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const emailValidation = (email) => {\n    const mailFormat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (email.match(mailFormat)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  //email instance of the input custom component\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    reset: resetPassword,\n  } = useInput(emailValidation);\n\n  //   Authentication error state\n  const [authError, setAuthError] = useState(null);\n\n  //   Reset password handler\n  const resetPasswordHandler = (event) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyCJJ7gB1xWDjeSmyj12tkqkgOjlwz2vCLc\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          requestType: \"PASSWORD_RESET\",\n          email: enteredEmail,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          // console.log(\"good\");\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            console.log(data);\n            let errorMessage = \"Authentication Failed\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        resetPassword();\n      })\n      .catch((err) => {\n        // console.log(err.message);\n        setAuthError(err.message);\n      });\n  };\n  //   User feedback when authentication fails\n  let feedback;\n  if (authError === \"EMAIL_NOT_FOUND\") {\n    feedback = <p className={classes[\"error-text\"]}>Email is not registered</p>;\n  } else if (authError !== \"\") {\n    feedback = <p className={classes[\"error-text\"]}>{authError}</p>;\n  }\n\n  // Remove error when email changes\n  useEffect(() => {\n    setAuthError(null);\n  }, [enteredEmail]);\n  return (\n    <div className={classes.container}>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Link to=\"/\">\n            <Navbar.Brand className=\"logo\">Weatherly</Navbar.Brand>\n          </Link>\n        </Container>\n      </Navbar>\n      <div className={classes.element}>\n        <h1>Forgot Password?</h1>\n        <p className=\"text\">\n          No worries, kindly enter your email and we'll send you reset\n          instructions.\n        </p>\n        <form onSubmit={resetPasswordHandler} className={classes[\"reset-form\"]}>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              value={enteredEmail}\n              onChange={emailChangeHandler}\n              type=\"email\"\n              id=\"email\"\n              required\n            />\n          </div>\n          <div className={classes.actions}>\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <button disabled={!emailIsValid}>Reset password</button>\n            )}\n            {feedback}\n          </div>\n        </form>\n        <Link className={classes.flex} to=\"/login\">\n          <IoMdArrowBack /> Back to login\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","import { useState } from \"react\";\n\n// custom input field was created since same logic is shared\nconst useInput = (validateValue) => {\n  // validateValue is a callback function\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthForm_container__c83gh\",\"element\":\"AuthForm_element__7WXs6\",\"reset-form\":\"AuthForm_reset-form__10kf3\",\"control\":\"AuthForm_control__2fVSU\",\"invalid\":\"AuthForm_invalid__2xOpm\",\"actions\":\"AuthForm_actions__1VNhY\",\"action\":\"AuthForm_action__1YuFu\",\"toggle\":\"AuthForm_toggle__21tnB\",\"flex\":\"AuthForm_flex__2F0aW\",\"error-text\":\"AuthForm_error-text__3Gs2x\"};"],"sourceRoot":""}