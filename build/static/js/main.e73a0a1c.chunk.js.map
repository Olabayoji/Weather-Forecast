{"version":3,"sources":["components/UI/Loader.js","store/auth-slice.js","store/weather-slice.js","components/UI/Loader.module.css","App.js","store/store.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","initialToken","localStorage","getItem","initialAuthState","loginToken","authSlice","createSlice","name","initialState","reducers","logOut","state","removeItem","console","log","logIn","action","payload","token","setItem","logOutTime","expirationTime","currentTime","Date","getTime","autoLogoutTime","expire","setTimeout","authActions","actions","initialWeatherState","weatherData","coordinates","latitude","longitude","moreInfo","weatherSlice","loadWeatherData","loadLocation","weatherActions","module","exports","Homepage","React","lazy","AuthPage","ResetPassword","ErrorPage","SettingsPage","App","useEffect","document","title","fallback","Loader","path","element","RequireNoAuth","redirectTo","RequireAuth","children","useSelector","auth","to","store","configureStore","reducer","authReducer","weather","weatherReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e73a0a1c.chunk.js","sourcesContent":["import classes from \"./Loader.module.css\";\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n};\n\nexport default LoadingSpinner;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialToken = localStorage.getItem(\"token\");\nconst autoLogoutTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const expireTime = new Date(expirationTime).getTime();\n  const remainingDuration = expireTime - currentTime;\n  return remainingDuration;\n};\nconst initialAuthState = {\n  loginToken: initialToken,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    logOut: (state) => {\n      state.loginToken = null;\n      localStorage.removeItem(\"token\");\n      console.log(\"log\");\n    },\n    logIn: (state, action) => {\n      state.loginToken = action.payload.token;\n      localStorage.setItem(\"token\", action.payload.token);\n      const logOutTime = autoLogoutTime(action.payload.expire);\n      console.log(logOutTime);\n      const logOut = () => {\n        localStorage.removeItem(\"token\");\n      };\n      // Automatically logout user after token expires\n      setTimeout(logOut, logOutTime);\n    },\n  },\n});\nexport const authActions = authSlice.actions;\nexport default authSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialLat = localStorage.getItem(\"initialLat\");\nconst initialLon = localStorage.getItem(\"initialLon\");\n\nconst initialWeatherState = {\n  weatherData: null,\n  coordinates: {\n    latitude: initialLat,\n    longitude: initialLon,\n  },\n  moreInfo: null,\n};\n\nconst weatherSlice = createSlice({\n  name: \"weather\",\n  initialState: initialWeatherState,\n  reducers: {\n    loadWeatherData: (state, action) => {\n      state.weatherData = action.payload;\n      localStorage.setItem(\"weatherInfo\", action.payload);\n    },\n    loadLocation: (state, action) => {\n      state.coordinates = action.payload;\n      // Saves previous coordinate to local storage to prevents data loss on reload\n      localStorage.setItem(\"initialLat\", action.payload.latitude);\n      localStorage.setItem(\"initialLon\", action.payload.longitude);\n    },\n    moreInfo: (state, action) => {\n      state.moreInfo = action.payload;\n      console.log(state.moreInfo);\n    },\n  },\n});\nexport const weatherActions = weatherSlice.actions;\nexport default weatherSlice.reducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__214A_\"};","import React, { Suspense, useEffect } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Loader from \"./components/UI/Loader\";\n\n// Lazy loading\nconst Homepage = React.lazy(() => import(\"./pages/HomePage.js\"));\nconst AuthPage = React.lazy(() => import(\"./pages/AuthPage\"));\nconst ResetPassword = React.lazy(() =>\n  import(\"./components/Auth/ResetPassword.js\")\n);\nconst ErrorPage = React.lazy(() => import(\"./pages/ErrorPage.js\"));\nconst SettingsPage = React.lazy(() => import(\"./pages/SettingsPage.js\"));\n\nconst App = () => {\n  useEffect(() => {\n    document.title = \"Weatherly\";\n  }, []);\n  return (\n    <Suspense\n      fallback={() => (\n        <div className=\"centered\">\n          <Loader />\n        </div>\n      )}\n    >\n      <Routes>\n        <Route path=\"/\" element={<Homepage />} />\n        <Route\n          path=\"/reset-password\"\n          element={\n            <RequireNoAuth redirectTo=\"/\">\n              <ResetPassword />\n            </RequireNoAuth>\n          }\n        />\n        <Route\n          path=\"/:auth\"\n          element={\n            <RequireNoAuth redirectTo=\"/\">\n              <AuthPage />\n            </RequireNoAuth>\n          }\n        />\n        <Route\n          path=\"/settings\"\n          element={\n            <RequireAuth redirectTo=\"/\">\n              <SettingsPage />\n            </RequireAuth>\n          }\n        />\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Routes>\n    </Suspense>\n  );\n};\n\nexport default App;\n\nfunction RequireAuth({ children, redirectTo }) {\n  const loggedIn = useSelector((state) => state.auth.loginToken);\n  return loggedIn ? children : <Navigate to={redirectTo} />;\n}\n\nfunction RequireNoAuth({ children, redirectTo }) {\n  const loggedIn = useSelector((state) => state.auth.loginToken);\n  return !loggedIn ? children : <Navigate to={redirectTo} />;\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./auth-slice\";\nimport weatherReducer from \"./weather-slice\";\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    weather: weatherReducer,\n  },\n});\n","import ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}