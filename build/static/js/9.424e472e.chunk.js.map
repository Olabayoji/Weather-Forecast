{"version":3,"sources":["pages/SettingsPage.module.css","pages/SettingsPage.js","hooks/use-input.js","components/Layout/Layout.module.css","components/Layout/MainNavigation.js","components/Layout/Layout.js"],"names":["module","exports","SettingsPage","navigate","useNavigate","useState","isLoading","setIsLoading","error","setError","dispatch","useDispatch","idToken","useSelector","state","auth","loginToken","useInput","value","trim","length","enteredPassword","passwordIsValid","isValid","passwordChangeHandler","valueChangeHandler","passwordBlurHandler","inputBlurHandler","passwordHasError","hasError","resetPassword","reset","passwordInputClasses","classes","control","invalid","className","onSubmit","event","preventDefault","fetch","method","body","JSON","stringify","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","message","Error","authActions","logOut","catch","err","htmlFor","onChange","onBlur","type","id","required","loader","actions","onClick","toggle","disabled","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","target","MainNavigation","loggedIn","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","NavDropdown","title","Item","to","Layout","props","main","children"],"mappings":"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","file":"static/js/9.424e472e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"SettingsPage_control__15aTX\",\"invalid\":\"SettingsPage_invalid__11uV7\",\"actions\":\"SettingsPage_actions__33jLY\",\"action\":\"SettingsPage_action__2EXaY\",\"toggle\":\"SettingsPage_toggle__1xYC_\",\"error-text\":\"SettingsPage_error-text__xEtik\",\"loader\":\"SettingsPage_loader__2Q0nm\"};","import React, { useState } from \"react\";\nimport Layout from \"../components/Layout/Layout\";\nimport useInput from \"../hooks/use-input\";\nimport classes from \"./SettingsPage.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from \"../store/auth-slice\";\nimport Loader from \"../components/UI/Loader\";\n\nconst SettingsPage = () => {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const idToken = useSelector((state) => state.auth.loginToken);\n  // password instance of the input custom component\n  const {\n    value: enteredPassword,\n    isValid: passwordIsValid,\n    valueChangeHandler: passwordChangeHandler,\n    inputBlurHandler: passwordBlurHandler,\n    hasError: passwordHasError,\n    reset: resetPassword,\n  } = useInput((value) => value.trim().length > 7);\n\n  // Dynamic class for the password input field\n  const passwordInputClasses = passwordHasError\n    ? `${classes.control} ${classes.invalid} `\n    : classes.control;\n\n  const onBackHandler = () => {\n    navigate(\"/\");\n  };\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCJJ7gB1xWDjeSmyj12tkqkgOjlwz2vCLc\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: idToken,\n          password: enteredPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication Failed\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        dispatch(authActions.logOut());\n        resetPassword();\n      })\n      .catch((err) => {\n        // console.log(err.message);\n        setIsLoading(false);\n        setError(err.message);\n        resetPassword();\n      });\n  };\n\n  return (\n    <Layout>\n      <div className={passwordInputClasses}>\n        <h1>Change password</h1>\n        <form onSubmit={onSubmitHandler}>\n          <label htmlFor=\"new-password\">New Password</label>\n          <input\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={passwordBlurHandler}\n            type=\"password\"\n            id=\"new-password\"\n            required\n          />\n          {passwordHasError && (\n            <p className={classes[\"error-text\"]}>\n              Kindly enter a valid password\n            </p>\n          )}\n          {isLoading ? (\n            <div className={classes.loader}>\n              <Loader />\n            </div>\n          ) : (\n            <div className={classes.actions}>\n              <button onClick={onBackHandler} className={classes.toggle}>\n                Back\n              </button>\n              <button disabled={!passwordIsValid}>Submit</button>\n            </div>\n          )}\n        </form>\n        {error && <p className={classes[\"error-text\"]}>{error}</p>}\n      </div>\n    </Layout>\n  );\n};\n\nexport default SettingsPage;\n","import { useState } from \"react\";\n\n// custom input field was created since same logic is shared\nconst useInput = (validateValue) => {\n  // validateValue is a callback function\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1dFZc\"};","import React from \"react\";\nimport { Navbar, Container, Nav, NavDropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from \"../../store/auth-slice\";\nfunction MainNavigation() {\n  const dispatch = useDispatch();\n  const loggedIn = useSelector((state) => state.auth.loginToken);\n\n  // Logout handler\n  const logoutHandler = () => {\n    dispatch(authActions.logOut());\n  };\n  // Navigation bar using bootstrap\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand className=\"logo\" href=\"/\">\n          Weatherly\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ms-auto\">\n            {/* {loggedIn && (\n              <Nav.Link className=\"centered\" href=\"#home\">\n                Favorite\n              </Nav.Link>\n            )} */}\n            {loggedIn && (\n              <NavDropdown\n                className=\"centered\"\n                title=\"Profile\"\n                id=\"basic-nav-dropdown\"\n              >\n                <NavDropdown.Item className=\"centered\" href=\"/settings\">\n                  Settings\n                </NavDropdown.Item>\n                <NavDropdown.Item className=\"centered\" onClick={logoutHandler}>\n                  Log out\n                </NavDropdown.Item>\n              </NavDropdown>\n            )}\n            {!loggedIn && (\n              <Link className=\"centered cta nav-link\" to=\"/login\">\n                Login\n              </Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default MainNavigation;\n","import React from \"react\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport MainNavigation from \"./MainNavigation\";\nimport classes from \"./Layout.module.css\";\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n"],"sourceRoot":""}