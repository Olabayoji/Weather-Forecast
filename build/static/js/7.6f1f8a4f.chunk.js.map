{"version":3,"sources":["components/SearchBar/SearchBar.module.css","components/WeatherDisplay/WeatherDisplay.module.css","components/UI/Card.module.css","components/WeatherDisplay/DailyWeather.module.css","components/UI/Modal.module.css","components/WeatherDisplay/MoreInfo.module.css","components/UI/Popup.module.css","components/SearchBar/SearchBar.js","components/UI/Icons.js","hooks/use-http.js","lib/api.js","components/UI/Card.js","components/WeatherDisplay/DailyWeather.js","assets/clear.jpeg","assets/cloudy.jpeg","assets/rain.jpeg","assets/thunder.jpeg","assets/snow.jpeg","components/WeatherDisplay/WeatherDisplay.js","components/UI/Modal.js","components/UI/Guage.js","components/WeatherDisplay/MoreInfo.js","components/UI/Popup.js","components/StartingPage.js","pages/HomePage.js","components/Layout/Layout.module.css","components/Layout/MainNavigation.js","components/Layout/Layout.js"],"names":["module","exports","autoComplete","longitude","latitude","handleScriptLoad","updateQuery","autoCompleteRef","window","google","maps","places","Autocomplete","current","types","setFields","addListener","handlePlaceSelect","a","addressObject","getPlace","query","formatted_address","geometry","location","lat","lng","SearchBar","useState","setQuery","useRef","dispatch","useDispatch","useEffect","weatherActions","loadLocation","url","callback","script","document","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","loadScript","className","classes","search","htmlFor","ref","onChange","event","target","value","placeholder","suggestions","Icons","props","weatherDesc","weather","toLowerCase","includes","httpReducer","state","action","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","sendRequest","useCallback","lon","message","API_KEY","getWeatherForecast","fetch","response","json","ok","Error","forecastData","weekday","month","forecast","forecastObject","Date","valid_date","getDay","slice","getMonth","date","getDate","year","getFullYear","id","cityName","city_name","maxTemp","high_temp","minTemp","low_temp","avgTemp","Math","round","temp","precipitation","precip","description","windSpeed","wind_spd","pressure","pres","visibility","vis","uvIndex","uv","humidity","rh","push","Card","card","children","DailyWeather","onClick","onShow","daily","time","icon","WeatherDisplay","coordinates","useSelector","shareLocation","setShareLocation","searchRequest","dataRequest","statusRequest","errorRequest","navigator","geolocation","getCurrentPosition","coords","Loader","currentWeatherData","currentWeatherDesc","map","day","days","currentDate","style","backgroundImage","cloudy","thunder","rain","clear","snow","Fragment","city","condition","inner","Backdrop","onClose","backdrop","ModalOverlay","modal","content","Modal","ReactDOM","createPortal","getElementById","valuetext","Gauge","min","max","Box","sx","minWidth","Slider","defaultValue","getAriaValueText","step","valueLabelDisplay","disabled","MoreInfo","info","moreInfo","container","temperature","element","header","conditions","Popup","popup","StartingPage","loggedIn","auth","loginToken","showInfo","setShowInfo","loginPopup","setLoginPopup","Layout","setTimeout","HomePage","MainNavigation","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","NavDropdown","title","Item","authActions","logOut","to","main"],"mappings":"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","file":"static/js/7.6f1f8a4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchBar_search__1uGbo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather-display\":\"WeatherDisplay_weather-display__uP161\",\"temp\":\"WeatherDisplay_temp__WDwqm\",\"city\":\"WeatherDisplay_city__fbK-o\",\"inner\":\"WeatherDisplay_inner__14E0I\",\"condition\":\"WeatherDisplay_condition__2lzgb\",\"description\":\"WeatherDisplay_description__16C5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"daily\":\"DailyWeather_daily__2mTqH\",\"time\":\"DailyWeather_time__3E-SK\",\"temp\":\"DailyWeather_temp__21D5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"header\":\"Modal_header__b50LG\",\"content\":\"Modal_content__3zUnK\",\"actions\":\"Modal_actions__1JvhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoreInfo_container__3cfZc\",\"day\":\"MoreInfo_day__26dGr\",\"temperature\":\"MoreInfo_temperature__XDS6K\",\"temp\":\"MoreInfo_temp__1GWl_\",\"element\":\"MoreInfo_element__1213-\",\"header\":\"MoreInfo_header__PzDeQ\",\"conditions\":\"MoreInfo_conditions__DcJn2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__2whQH\"};","import React from \"react\";\nimport classes from \"./SearchBar.module.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { weatherActions } from \"../../store/weather-slice\";\nlet autoComplete;\nlet longitude;\nlet latitude;\n\n// dynamically load JavaScript files in our html with callback when finished\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  // when script state is ready and loaded or complete we will call callback\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\n// handle when the script is loaded we will assign autoCompleteRef with google maps place autocomplete\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  // assign autoComplete with Google maps place one time\n  autoComplete = new window.google.maps.places.Autocomplete(\n    autoCompleteRef.current,\n    { types: [\"(cities)\"] }\n  );\n  autoComplete.setFields([\n    \"address_components\",\n    \"formatted_address\",\n    \"geometry\",\n  ]);\n\n  // add a listener to handle when the place is selected\n  autoComplete.addListener(\"place_changed\", () =>\n    handlePlaceSelect(updateQuery)\n  );\n}\n\nasync function handlePlaceSelect(updateQuery) {\n  const addressObject = autoComplete.getPlace();\n  const query = addressObject.formatted_address;\n  latitude = addressObject.geometry.location.lat();\n  longitude = addressObject.geometry.location.lng();\n  updateQuery(query);\n}\n\n// SearchBar component\nconst SearchBar = () => {\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n  const dispatch = useDispatch();\n  if (autoCompleteRef.current) {\n  }\n  useEffect(() => {\n    if (latitude) {\n      dispatch(\n        weatherActions.loadLocation({\n          latitude: latitude,\n          longitude: longitude,\n        })\n      );\n    }\n  }, [dispatch, longitude]);\n\n  useEffect(() => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyA4Fsst30Ob6hbP7aN97VB-l4DOl3MCYzQ&libraries=places`,\n      () => handleScriptLoad(setQuery, autoCompleteRef)\n    );\n  }, [dispatch]);\n  return (\n    <form className={classes.search}>\n      <label className=\"sr-only\" htmlFor=\"city\">\n        Enter city\n      </label>\n      <input\n        ref={autoCompleteRef}\n        onChange={(event) => setQuery(event.target.value)}\n        placeholder=\"Enter a City\"\n        value={query}\n      />\n\n      <ul className={classes.suggestions}></ul>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport { IoIosSunny, IoMdCloud } from \"react-icons/io\";\nimport {\n  BsFillCloudFogFill,\n  BsFillCloudRainFill,\n  BsFillCloudSnowFill,\n  BsFillCloudLightningRainFill,\n} from \"react-icons/bs\";\n\nconst Icons = (props) => {\n  let weatherDesc = props.weather.toLowerCase();\n  let icon;\n  if (weatherDesc.includes(\"thunder\")) {\n    icon = <BsFillCloudLightningRainFill />;\n  } else if (weatherDesc.includes(\"drizzle\") || weatherDesc.includes(\"rain\")) {\n    icon = <BsFillCloudRainFill />;\n  } else if (weatherDesc.includes(\"cloud\")) {\n    icon = <IoMdCloud />;\n  } else if (weatherDesc.includes(\"clear\")) {\n    icon = <IoIosSunny />;\n  } else if (weatherDesc.includes(\"snow\")) {\n    icon = <BsFillCloudSnowFill />;\n  } else {\n    icon = <BsFillCloudFogFill />;\n  }\n  return icon;\n};\n\nexport default Icons;\n","import { useReducer, useCallback } from \"react\";\n\nconst httpReducer = (state, action) => {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n};\n\nconst useHttp = (requestFunction, startWithPending = false) => {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (lon, lat) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(lon, lat);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n};\n\nexport default useHttp;\n","const API_KEY = \"8f4b6f0769434ffba5031fb4bc7c57f8\";\n\nexport async function getWeatherForecast(lat, lon) {\n  const response = await fetch(\n    `https://api.weatherbit.io/v2.0/forecast/daily?lat=${lat}&lon=${lon}&days=14&key=${API_KEY}`\n  );\n\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch data.\");\n  }\n\n  const forecastData = [];\n  const weekday = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const month = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  for (const forecast of data.data) {\n    const forecastObject = {\n      weekday: weekday[new Date(forecast.valid_date).getDay()].slice(0, 3),\n      month: month[new Date(forecast.valid_date).getMonth()],\n      date: new Date(forecast.valid_date).getDate(),\n      year: new Date(forecast.valid_date).getFullYear(),\n      id: forecast.valid_date,\n      cityName: data.city_name,\n      maxTemp: forecast.high_temp,\n      minTemp: forecast.low_temp,\n      avgTemp: Math.round(forecast.temp),\n      precipitation: forecast.precip,\n      weather: forecast.weather.description,\n      windSpeed: Math.round(forecast.wind_spd * 3.6),\n      pressure: forecast.pres,\n      visibility: Math.round(forecast.vis),\n      uvIndex: forecast.uv,\n      humidity: forecast.rh,\n    };\n    forecastData.push(forecastObject);\n  }\n  // console.log(forecastData);\n  return { forecastData };\n}\n","import React from \"react\";\nimport classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport classes from \"./DailyWeather.module.css\";\nimport Icons from \"../UI/Icons\";\nimport { weatherActions } from \"../../store/weather-slice\";\nimport { useDispatch } from \"react-redux\";\nconst DailyWeather = (props) => {\n  return (\n    <div onClick={() => props.onShow(props.data)} className={classes.daily}>\n      <p className={classes.time}>{props.date}</p>\n      <Icons weather={props.icon} />\n      <p className={classes.temp}>{props.temp + \"°\"}</p>\n    </div>\n  );\n};\n\nexport default DailyWeather;\n","export default __webpack_public_path__ + \"static/media/clear.3ac81d27.jpeg\";","export default __webpack_public_path__ + \"static/media/cloudy.6d81d02a.jpeg\";","export default __webpack_public_path__ + \"static/media/rain.115f56be.jpeg\";","export default __webpack_public_path__ + \"static/media/thunder.56ef1a93.jpeg\";","export default __webpack_public_path__ + \"static/media/snow.1865d963.jpeg\";","import React, { useEffect, useState } from \"react\";\nimport classes from \"./WeatherDisplay.module.css\";\nimport Icons from \"../UI/Icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"../UI/Loader\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getWeatherForecast } from \"../../lib/api\";\nimport Card from \"../UI/Card\";\nimport DailyWeather from \"./DailyWeather\";\nimport { weatherActions } from \"../../store/weather-slice\";\nimport clear from \"../../assets/clear.jpeg\";\nimport cloudy from \"../../assets/cloudy.jpeg\";\nimport rain from \"../../assets/rain.jpeg\";\nimport thunder from \"../../assets/thunder.jpeg\";\nimport snow from \"../../assets/snow.jpeg\";\n\nconst WeatherDisplay = (props) => {\n  const dispatch = useDispatch();\n  const coordinates = useSelector((state) => state.weather.coordinates);\n  // useHttp custom hook  instance for when the user searches for location\n  const [shareLocation, setShareLocation] = useState(true);\n  const {\n    sendRequest: searchRequest,\n    data: dataRequest,\n    status: statusRequest,\n    error: errorRequest,\n  } = useHttp(getWeatherForecast);\n\n  useEffect(() => {\n    // if there's a coordinate save into users local storage\n    if (coordinates.longitude) {\n      searchRequest(coordinates.latitude, coordinates.longitude);\n    }\n    // ask for permission to get user location\n    else {\n      navigator.geolocation.getCurrentPosition(\n        // run if user accepts to share location\n        (location) => {\n          const lat = location.coords.latitude;\n          const lon = location.coords.longitude;\n          dispatch(\n            weatherActions.loadLocation({\n              latitude: lat,\n              longitude: lon,\n            })\n          );\n        },\n        // runs if user fails to share location\n        (error) => setShareLocation(false)\n      );\n    }\n  }, [\n    coordinates.latitude,\n    coordinates.longitude,\n    searchRequest,\n    coordinates,\n    dispatch,\n  ]);\n\n  // if user fails to share location\n  if (!shareLocation) {\n    return (\n      <div className=\"centered\">\n        <p>Permission to get current location denied. Kindly enter a city</p>\n      </div>\n    );\n  }\n\n  if (\n    statusRequest === \"pending\" ||\n    coordinates.latitude === null ||\n    dataRequest === null\n  ) {\n    return (\n      <div className=\"centered\">\n        <Loader />\n      </div>\n    );\n  }\n\n  if (errorRequest) {\n    return (\n      <div className=\"centered\">\n        <p>{errorRequest}</p>\n      </div>\n    );\n  }\n  // console.log(errorRequest, dataRequest, statusRequest);\n\n  // current weather  = to the first object in the array\n  let currentWeatherData = dataRequest.forecastData[0];\n  let currentWeatherDesc = currentWeatherData.weather.toLowerCase();\n\n  // 7 day forecast card\n  let forecast = dataRequest.forecastData.map((day) => {\n    const date = day.weekday;\n    const icon = day.weather;\n    const temp = day.avgTemp;\n    const days = day;\n    const data = day;\n    return (\n      <DailyWeather\n        onShow={props.onShow}\n        day={days}\n        key={day.id}\n        date={date}\n        icon={icon}\n        temp={temp}\n        data={data}\n      />\n    );\n  });\n\n  // Date\n  const currentDate = `${currentWeatherData.weekday}, ${currentWeatherData.date} ${currentWeatherData.month} ${currentWeatherData.year}`;\n\n  // Dynamic Background Image\n  const weather = currentWeatherData.weather.toLowerCase();\n  let style = {\n    backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(${cloudy})`,\n  };\n  if (weather.includes(\"thunder\")) {\n    style = { backgroundImage: `url(${thunder})` };\n  } else if (weather.includes(\"drizzle\") || weather.includes(\"rain\")) {\n    style = {\n      backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(${rain})`,\n    };\n  } else if (weather.includes(\"clear\")) {\n    style = {\n      backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(${clear})`,\n    };\n  } else if (weather.includes(\"snow\")) {\n    style = {\n      backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(${snow})`,\n    };\n  }\n  return (\n    <React.Fragment>\n      <div style={style} className={classes[\"weather-display\"]}>\n        <div className=\"centered\">\n          <p className={classes.date}>{currentDate}</p>\n          <p className={classes.city}>{currentWeatherData.cityName}</p>\n        </div>\n        <p className={classes.temp}>{currentWeatherData.avgTemp + \"°\"}</p>\n        <div className=\"centered\">\n          <Icons weather={currentWeatherDesc} />\n          <p className={classes.condition}>{currentWeatherData.weather}</p>\n        </div>\n      </div>\n\n      <Card>\n        <p className={classes.description}>14-Day Forecast</p>\n        <div className={classes.inner}>\n          <hr />\n          {forecast}\n        </div>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default WeatherDisplay;\n","import React, { Fragment } from \"react\";\nimport classes from \"./Modal.module.css\";\nimport ReactDOM from \"react-dom\";\nconst Backdrop = (props) => {\n  return <div onClick={props.onClose} className={classes.backdrop}></div>;\n};\nconst ModalOverlay = (props) => {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n};\n\nexport default function Modal(props) {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.onClose} />,\n        document.getElementById(\"overlays\")\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        document.getElementById(\"overlays\")\n      )}\n    </Fragment>\n  );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Slider from \"@mui/material/Slider\";\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nexport default function Gauge(props) {\n  const marks = [\n    {\n      value: 0,\n      label: `${props.min}°`,\n    },\n\n    {\n      value: 100,\n      label: `${props.max}°`,\n    },\n  ];\n  return (\n    <Box sx={{ minWidth: 100 }}>\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={props.value}\n        getAriaValueText={valuetext}\n        step={10}\n        valueLabelDisplay=\"auto\"\n        // marks={marks}\n        disabled\n      />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Modal from \"../UI/Modal\";\nimport Card from \"../UI/Card\";\nimport { useSelector } from \"react-redux\";\nimport classes from \"./MoreInfo.module.css\";\nimport { BiWind } from \"react-icons/bi\";\nimport { MdVisibility, MdOutlineWater } from \"react-icons/md\";\nimport { GiBarbedSun } from \"react-icons/gi\";\nimport { FaTemperatureHigh } from \"react-icons/fa\";\nimport Gauge from \"../UI/Guage\";\nimport Icons from \"../UI/Icons\";\n\nconst MoreInfo = (props) => {\n  const info = useSelector((state) => state.weather.moreInfo);\n  const day = `${info.weekday}, ${info.date} ${info.month} ${info.year}`;\n  // console.log(info);\n  return (\n    <Modal onClose={props.onClose}>\n      <Card>\n        <div className={classes.container}>\n          <p className={classes.day}>{day}</p>\n          <div className={classes.temperature}>\n            <FaTemperatureHigh />\n            <p className={classes.temp}>{info.avgTemp}°</p>\n\n            <div>\n              <div className={classes.element}>\n                <p className={classes.header}>Min</p>\n                <p>{Math.round(info.minTemp)}°</p>\n              </div>\n              <Gauge\n                value={info.avgTemp}\n                min={info.minTemp}\n                max={info.maxTemp}\n              />\n              <div className={classes.element}>\n                <p className={classes.header}>Max</p>\n                <p>{Math.round(info.maxTemp)}°</p>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes.conditions}>\n            <div className={classes.element}>\n              <p className={classes.header}>\n                <BiWind /> Wind\n              </p>\n              <p>{info.windSpeed} km/h</p>\n            </div>\n            <div className={classes.element}>\n              <p className={classes.header}>\n                {\" \"}\n                <MdOutlineWater /> Humidity\n              </p>\n              <p>{info.humidity}%</p>\n            </div>\n            <div className={classes.element}>\n              <p className={classes.header}>\n                <GiBarbedSun /> Pressure\n              </p>\n              <p>{info.pressure} hPa</p>\n            </div>\n            <div className={classes.element}>\n              <p className={classes.header}>\n                <MdVisibility /> Visibility\n              </p>\n              <p>{info.visibility} km</p>\n            </div>\n          </div>\n          <button onClick={props.onClose} className=\"btn\">\n            Close\n          </button>\n        </div>\n      </Card>\n    </Modal>\n  );\n};\n\nexport default MoreInfo;\n","import React from \"react\";\nimport classes from \"./Popup.module.css\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nconst Popup = () => {\n  return (\n    <div className={classes.popup}>\n      <p>\n        <AiFillWarning /> Kindly login to view more forecast information\n      </p>\n    </div>\n  );\n};\n\nexport default Popup;\n","import Layout from \"./Layout/Layout\";\nimport React, { useState } from \"react\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport WeatherDisplay from \"./WeatherDisplay/WeatherDisplay\";\nimport MoreInfo from \"./WeatherDisplay/MoreInfo\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { weatherActions } from \"../store/weather-slice\";\nimport Popup from \"./UI/Popup\";\n\nconst StartingPage = () => {\n  const loggedIn = useSelector((state) => state.auth.loginToken);\n  const dispatch = useDispatch();\n  const [showInfo, setShowInfo] = useState(false);\n  const [loginPopup, setLoginPopup] = useState(false);\n\n  const showInfoHandler = (data) => {\n    if (loggedIn) {\n      setShowInfo(true);\n      dispatch(weatherActions.moreInfo(data));\n    } else {\n      setLoginPopup(true);\n\n      setTimeout(() => {\n        setLoginPopup(false);\n      }, 5000);\n    }\n  };\n  const hideInfoHandler = () => {\n    setShowInfo(false);\n  };\n\n  return (\n    <Layout>\n      {loginPopup && <Popup />}\n      {showInfo && <MoreInfo onClose={hideInfoHandler} />}\n      <SearchBar />\n      <WeatherDisplay onShow={showInfoHandler} />\n    </Layout>\n  );\n};\n\nexport default StartingPage;\n","import React from \"react\";\nimport StartingPage from \"../components/StartingPage\";\n\nconst HomePage = () => {\n  return <StartingPage />;\n};\n\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1dFZc\"};","import React from \"react\";\nimport { Navbar, Container, Nav, NavDropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from \"../../store/auth-slice\";\nfunction MainNavigation() {\n  const dispatch = useDispatch();\n  const loggedIn = useSelector((state) => state.auth.loginToken);\n\n  // Logout handler\n  const logoutHandler = () => {\n    dispatch(authActions.logOut());\n  };\n  // Navigation bar using bootstrap\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand className=\"logo\" href=\"/\">\n          Weatherly\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ms-auto\">\n            {/* {loggedIn && (\n              <Nav.Link className=\"centered\" href=\"#home\">\n                Favorite\n              </Nav.Link>\n            )} */}\n            {loggedIn && (\n              <NavDropdown\n                className=\"centered\"\n                title=\"Profile\"\n                id=\"basic-nav-dropdown\"\n              >\n                <NavDropdown.Item className=\"centered\" href=\"/settings\">\n                  Settings\n                </NavDropdown.Item>\n                <NavDropdown.Item className=\"centered\" onClick={logoutHandler}>\n                  Log out\n                </NavDropdown.Item>\n              </NavDropdown>\n            )}\n            {!loggedIn && (\n              <Link className=\"centered cta nav-link\" to=\"/login\">\n                Login\n              </Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default MainNavigation;\n","import React from \"react\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport MainNavigation from \"./MainNavigation\";\nimport classes from \"./Layout.module.css\";\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n"],"sourceRoot":""}